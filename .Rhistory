)) %>%
select(id, treatment, targetClass, nontargetClass,
targetOrder, nontargetOrder, targetAlliance,
nontargetAlliance, targetAssociation,
nontargetAssociation) %>%
pivot_longer(c(targetClass, nontargetClass, targetOrder,
nontargetOrder, targetAlliance, nontargetAlliance,
targetAssociation, nontargetAssociation),
names_to = "type", values_to = "value") %>%
separate(type, c("target", "type"), sep = "target") %>%
mutate(target = as_factor(paste0(target, "target")),
type = as_factor(str_to_lower(type)),
type = fct_recode(type,
"Querco-Fagetea" = "class",
"Fagetalia sylvaticae" = "order",
"Alno-Ulmion minoris" = "alliance",
"Alnetum incanae" = "association"
),
target = fct_recode(target,
"Character species of target vegetation" = "target",
"Character species of other plant communities" = "nontarget"),
treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "bottom",
legend.direction = "vertical",
legend.title = ggplot2::element_blank(),
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
pd <- position_dodge(.6)
ggplot(sites, aes(treatment, value, colour = target)) +
geom_boxplot() +
#geom_quasirandom(color = "black", dodge.width = .9, size = 0.7) +
facet_wrap(~type) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20)) +
scale_colour_manual(values = c("black", "grey50")) +
labs(x = "", y = "Coverage [%]", colour = "") +
theme_mb()
### Save ###
ggsave(here("outputs", "figures",
"figure_3_target_coverage_800dpi_12x10cm.tiff"),
dpi = 800, width = 12, height = 10, units = "cm")
# Show Figure Ellenberg indicator species richness ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, floodRichness, chwetRichness) %>%
pivot_longer(cols = c(floodRichness, chwetRichness),
names_to = "indicator", values_to = "n") %>%
mutate(indicator = fct_relevel(indicator,
c("floodRichness", "chwetRichness")),
indicator = fct_recode(indicator,
"Flood indicator" = "floodRichness",
"Periodical wet conditions" = "chwetRichness"),
treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "right",
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
pd <- position_dodge(.6)
ggplot(sites, aes(treatment, n)) +
geom_boxplot(color = "black") +
geom_quasirandom(color = "black", dodge.width = .6, size = .8) +
facet_wrap(~indicator) +
scale_y_continuous(limits = c(0, 10), breaks = seq(0, 100, 2)) +
labs(x = "", y = "Species richness [#]", shape = "") +
guides(shape = "none") +
theme_mb()
### Save ###
ggsave(here("outputs", "figures",
"figure_4_indicator_species_800dpi_10x6cm.tiff"),
dpi = 800, width = 10, height = 6, units = "cm")
# Show Figure Ellenberg values of F and N ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, cwmAbuF, cwmAbuN) %>%
pivot_longer(cols = c(cwmAbuF, cwmAbuN),
names_to = "indicator", values_to = "n") %>%
mutate(indicator = fct_recode(indicator,
"Moisture" = "cwmAbuF",
"Nutrients" = "cwmAbuN"),
treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "right",
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
pd <- position_dodge(.6)
ggplot(sites, aes(treatment, n)) +
geom_boxplot(colour = "black") +
geom_quasirandom(color = "black", dodge.width = .6, size = 0.8) +
facet_wrap(~indicator) +
scale_y_continuous(limits = c(5, 9), breaks = seq(0, 100, 1)) +
labs(x = "", y = "CWM Ellenberg value", shape = "") +
guides(shape = "none") +
theme_mb()
### Save ###
ggsave(here("outputs", "figures",
"figure_5_ellenberg_values_800dpi_10x6cm.tiff"),
dpi = 800, width = 10, height = 6, units = "cm")
# Show Figure CWM canopy height ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, cwmAbuHeight) %>%
mutate(treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "right",
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
ggplot(sites, aes(treatment, cwmAbuHeight)) +
geom_boxplot(colour = "black") +
geom_quasirandom(color = "black", dodge.width = .6, size = .8) +
scale_y_continuous(limits = c(0.3, .8), breaks = seq(0, 100, 0.1)) +
labs(x = "", y = "CWM canopy heihgt [m]", size = 3) +
theme_mb()
### Save ###
ggsave(here("outputs", "figures", "figure_6_cwm_height_800dpi_6x6cm.tiff"),
dpi = 800, width = 6, height = 6, units = "cm")
# Show Figure CWM LDMC ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, cwmAbuLdmc) %>%
mutate(treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "right",
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
ggplot(sites, aes(treatment, cwmAbuLdmc)) +
geom_boxplot(colour = "black") +
geom_quasirandom(color = "black", dodge.width = .6, size = .8) +
scale_y_continuous(limits = c(230, 325), breaks = seq(0, 400, 20)) +
labs(x = "", y = expression(CWM~LDMC~"["*mg~g^-1*"]"), size = 3) +
theme_mb()
### Save ###
ggsave(here("outputs", "figures", "figure_6_cwm_ldmc_800dpi_6x6cm.tiff"),
dpi = 800, width = 6, height = 6, units = "cm")
# Show Figure CWM seed mass ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, cwmAbuSeedmass) %>%
mutate(treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = "white"),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.line.y = ggplot2::element_line(),
axis.line.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
legend.key = ggplot2::element_rect(fill = "white"),
legend.position = "right",
legend.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
ggplot(sites, aes(treatment, cwmAbuSeedmass)) +
geom_boxplot(colour = "black") +
geom_quasirandom(color = "black", dodge.width = .6, size = .8) +
scale_y_continuous(limits = c(1, 3), breaks = seq(0, 100, .5)) +
labs(x = "", y = "CWM seed mass [mg]", size = 3) +
theme_mb()
### Save ###
ggsave(here("outputs", "figures", "figure_6_cwm_seedmass_800dpi_6x6cm.tiff"),
dpi = 800, width = 6, height = 6, units = "cm")
# Show map of the Schnalz floodplain ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(sf)
library(ggmap)
library(ggrepel)
library(RColorBrewer)
library(patchwork)
### Start ###
rm(list = ls())
setwd(here("data", "processed", "spatial"))
### Load data ###
ger <- st_read("germany.shp")
weir <- st_read("weir")
sites <- st_read("sites.shp")
sites2 <- read_csv("sites2.csv", col_names = TRUE,
col_types =
cols(
id = col_factor(),
Floodplain = col_factor()
))
load("background_toner.rda")
load("background_terrain.rda")
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plot ################################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
ggplot2::theme(
panel.background = ggplot2::element_rect(fill = NA),
panel.grid = ggplot2::element_line(colour = NA),
text  = ggplot2::element_text(size = 10, color = "black"),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank(),
axis.ticks = ggplot2::element_blank(),
axis.line.x = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
legend.position = "none",
plot.margin = ggplot2::margin(.5, 0, 0, 0, "cm")
)
}
## 1 Preparation ########################################################
### a Map of project site -----------------------------------------------
(sites_graph <- ggmap(background_terrain) +
geom_point(data = sites2, aes(x = lon, y = lat, shape = Floodplain),
size = 2, color = "black") +
geom_point(aes(x = 10.9595, y = 47.77385),
pch = 15, size = 2, color = "black") +
annotate("text", x = 10.9595, y = 47.7736,
label = "Weir", size = 3) +
coord_sf(crs = st_crs(4326)) +
annotate("text", x = 10.9553, y = 47.7743,
label = "Inactive floodplain", size = 3) +
annotate("text", x = 10.9652, y = 47.77475,
label = "Active floodplain", size = 3) +
ggspatial::annotation_scale(location = "br",
pad_y = unit(0.6, "cm"),
pad_x = unit(0.7, "cm"),
width_hint = 0.4,
height = unit(0.2, "cm")) +
ggspatial::annotation_north_arrow(location = "br",
pad_y = unit(1.1, "cm"),
pad_x = unit(0.6, "cm"),
which_north = "true",
style = ggspatial::north_arrow_fancy_orienteering(),
height = unit(1, "cm"),
width = unit(1, "cm")) +
theme_mb())
### b Germany -----------------------------------------------------------
ger_graph <- ggplot() +
geom_sf(data = ger, fill = "transparent", colour = "black") +
geom_point(aes(x = 10.95948, y = 47.77405), size = 1, colour = "white") +
theme_mb() +
theme(
plot.background = element_blank()
)
### c Inset --------------------------------------------------------------
sites_graph + inset_element(ger_graph, .01, .65, .3, .99, on_top = TRUE)
# 2 Save #################################################################
ggsave("figure_1_map_300dpi_12x10cm.tiff",
dpi = 300, width = 12, height = 10, units = "cm",
path = here("outputs", "figures"))
# Show Figure FDis of all three traits ####
# Markus Bauer
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# A Preparation #########################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
### Packages ###
library(here)
library(tidyverse)
library(ggbeeswarm)
### Start ###
rm(list = ls())
setwd(here("data", "processed"))
### Load data ###
sites <- read_csv("data_processed_sites.csv", col_names = TRUE,
col_types =
cols(
.default = col_double(),
id = col_factor(),
treatment = col_factor()
)) %>%
select(id, treatment, fdisAbuLHS) %>%
mutate(treatment = fct_relevel(treatment, c("no_dam", "behind_dam")),
treatment = fct_recode(treatment,
"Active" = "no_dam",
"Inactive" = "behind_dam"))
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# B Plotten #############################################################
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
theme_mb <- function() {
